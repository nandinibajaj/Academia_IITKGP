# -*- coding: utf-8 -*-
"""CompChem_Lab3_PKC.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cPDpCuDCYbmJg-qhrEQJPlo0ehaWtIRc

**Nandini Bajaj 18CY20020**

Lab Assignment 3
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import r2_score as r2

df = pd.read_csv("/content/Dataset-Lab3.xlsx - Sheet1 (1).csv")
df

arr_x =  df['w (Xi)']
arr_y =  df['pLC50 (expt.) (Yi)']
y1 = np.zeros(15)
cpx=[]
cpy=[]
for i in range(14):
  cpx = list(arr_x)
  cpy = list(arr_y)
  
  np.delete(cpx, i)
  np.delete(cpy, i)
  
  m, b = np.polyfit(cpx, cpy, 1)
  y1[i] = b + (m*arr_x[i])

plt.plot(arr_y, y1, 'o')
plt.plot(arr_y, m*arr_y + b)
plt.xlabel("Y experimental")
plt.ylabel("Y calculated (X=w)")
one = r2(y1,arr_y)

one

arr_x =  df['logP (Xi)']
arr_y =  df['pLC50 (expt.) (Yi)']
y2 = np.zeros(15)
cpx=[]
cpy=[]
for i in range(14):
  cpx = list(arr_x)
  cpy = list(arr_y)
  
  np.delete(cpx, i)
  np.delete(cpy, i)
  
  m, b = np.polyfit(cpx, cpy, 1)
  y2[i] = b + (m*arr_x[i])

plt.plot(arr_y, y2, 'o')
plt.plot(arr_y, m*arr_y + b)
plt.xlabel("Y experimental")
plt.ylabel("Y calculated (X=logP)")
two = r2(y2, arr_y)

two

if(one > two):
  print("The descriptor w works better than logP")
else:
  print("The descriptor logP works better than w")

y1

y2

df['Y calc(with X=w)'] = y1
df['Y calc(with X=logP)'] = y2

df

